- name: Download and unpack Apache Zookeeper distributive
  block:
    - name: Check if Zookeeper already downloaded
      stat:
        path: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin"
      register: zookeeper_check
      failed_when: not zookeeper_check.stat.exists

  rescue:
    - name: Download Apache Zookeeper distributive
      get_url:
        url: "{{ zookeeper_url }}"
        dest: "/opt/"

    - name: Unpack Zookeeper
      unarchive:
        dest: "/opt/"
        src: "/opt/apache-zookeeper-{{ zookeeper_version }}-bin.tar.gz"
        remote_src: yes

    - name: Create data dir
      file:
        path: "{{ zookeeper_data }}"
        state: directory

- name: Open ports on firewall
  firewalld:
    port: "{{ item }}"
    permanent: no
    state: enabled
  loop:
    - "2181/tcp"
    - "3888/tcp"
    - "2888/tcp"
    - "8080/tcp"

- name: Put server id
  template:
    src: "myid.j2"
    dest: "{{ zookeeper_data }}/myid"
    owner: root
    group: root
    mode: '0644'
  notify: Restart zookeeper

- name: Put server configuration
  template:
    src: "zoo.j2.cfg"
    dest: "{{ zookeeper_home }}/conf/zoo.cfg"
    owner: root
    group: root
    mode: '0644'
  notify: Restart zookeeper

- name: Put env script to profile.d
  template:
    src: zookeeper.j2.sh
    dest: /etc/profile.d/zookeeper.sh
    owner: root
    group: root
    mode: '0755'
  notify: Restart zookeeper

- name: Put systemd unit file
  template:
    src: zookeeper.j2.service
    dest: "/etc/systemd/system/zookeeper.service"
    owner: root
    group: root
    mode: '0644'
  notify: Reload daemons

- name: Ensure if zookeeper is started
  systemd:
    name: zookeeper
    state: started
    enabled: yes